// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String
  lastName  String
  password  String
  reviews   Review[]
}

model Product {
  id            String   @id @default(uuid())
  title         String
  price         Decimal
  originalPrice Decimal
  description   String
  categoryId    String
  category      Category @relation(fields: [categoryId], references: [id])
  Image         Image[]
  Review        Review[]
}

model Image {
  id        String  @id @default(uuid())
  productId String
  order     Int     @default(0)
  image     String?
  product   Product @relation(fields: [productId], references: [id])
}

model Category {
  id       String         @id @default(uuid())
  title    String
  featured Boolean        @default(false)
  image    String?
  products Product[]
  sizes    SizeCategory[]
}

model Review {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  rating     Int
  shortTitle String
  review     String
  createdAt  DateTime @default(now())

  @@unique([productId, userId])
}

model SizeCategory {
  id         String   @id @default(uuid())
  title      String
  order      Int
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
}
